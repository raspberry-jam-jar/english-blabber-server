# Generated by Django 3.0 on 2020-05-04 16:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cristal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('image', models.ImageField(blank=True, null=True, upload_to='cristal/')),
            ],
        ),
        migrations.CreateModel(
            name='Penalty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('experience', models.FloatField()),
            ],
            options={
                'verbose_name_plural': 'Penalties',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('cristal', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game_skeleton.Cristal')),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_skeleton.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='HeroClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('capacity', models.FloatField(help_text='How many experience points should be collected to finish the hero class.')),
                ('image', models.ImageField(blank=True, null=True, upload_to='hero_class/')),
                ('is_draft', models.BooleanField(default=True)),
                ('parent', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game_skeleton.HeroClass')),
            ],
            options={
                'verbose_name_plural': 'Hero classes',
            },
        ),
        migrations.CreateModel(
            name='Gradation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('money', models.DecimalField(decimal_places=4, default=0.0, max_digits=10)),
                ('experience', models.FloatField()),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gradations', to='game_skeleton.Rule')),
            ],
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('image', models.ImageField(blank=True, null=True, upload_to='gifts/')),
                ('remain', models.FloatField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=4, max_digits=10)),
                ('is_group_wide', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('hero_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gifts', to='game_skeleton.HeroClass')),
            ],
        ),
    ]
